/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package simulpro.vista.dialogos;


import java.awt.Frame;
import javax.swing.JFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import simulpro.modelo.logica.ControlModel;
import simulpro.vista.componentes.graficas.Dataset;
import simulpro.vista.componentes.beans.FactoryCellListRenderer;
import simulpro.vista.componentes.graficas.FactoryChartPanel;


/**
 *
 * @author Ariel Arnedo
 */
public class DialogChart extends RootDialog {

    private final Dataset dataset;
    

    public DialogChart(Frame frame) {
        super(frame, false);
        this.dataset = new Dataset(ControlModel.getControlModel().getAnimation().getPersonasProcesadas());
        initComponents();
        setSize((int)(frame.getWidth()*0.9), (int)(frame.getHeight()*0.9));
        setLocationRelativeTo(null);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelNort = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        panelChart = new javax.swing.JPanel();
        panelSetting = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listOperation = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        panelNort.setForeground(new java.awt.Color(51, 153, 255));
        panelNort.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        panelNort.setLayout(new java.awt.BorderLayout());

        jLabel1.setBackground(new java.awt.Color(231, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Resultados");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255), 2));
        panelNort.add(jLabel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(panelNort, java.awt.BorderLayout.NORTH);

        panelChart.setLayout(new java.awt.BorderLayout());
        getContentPane().add(panelChart, java.awt.BorderLayout.CENTER);

        panelSetting.setLayout(new java.awt.BorderLayout());

        listOperation.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "GENERO", "TIPO", "COMPRA DE PRODUCTOS", "COMPRA DE ADULTOS", "COMPRA DE JOVENES", "COMPRA DE HOMBRES", "COMPRA DE MUJERES", "PRODUCTO MAS Y MENOSCOMPRADO MUJERES", "PRODUCTO MAS Y MENOSCOMPRADO HOMBRES", "PRODUCTO MAS Y MENOS", "PRODUCTO MAS Y MENOS COMPRADO JOVENES", "PRODUCTO MAS Y MENOS COMPRADO ADULTOS", "PROMEDIOS", "COMPRA DE ADULTOS HOMBRES", "COMPRA DE ADULTOS MUJERES", "COMPRA DE JOVENES HOMBRES", "COMPRA DE JOVENES MUJERES", "COMPRA DE NIÑOS", "COMPRA DE NIÑAS" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listOperation.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listOperation.setMaximumSize(new java.awt.Dimension(400, 150));
        listOperation.setMinimumSize(new java.awt.Dimension(400, 80));
        listOperation.setPreferredSize(new java.awt.Dimension(400, 80));
        listOperation.setCellRenderer(FactoryCellListRenderer.createListCellRenderer());
        listOperation.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listOperationValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listOperation);

        panelSetting.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(panelSetting, java.awt.BorderLayout.EAST);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listOperationValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listOperationValueChanged

        if(evt.getValueIsAdjusting()){
            System.out.println(listOperation.getSelectedIndex());
            panelChart.removeAll();
            panelChart.add(FactoryChartPanel.createCharPanel(createChart(listOperation.getSelectedIndex())));
            panelChart.updateUI();
        }
        

    }//GEN-LAST:event_listOperationValueChanged

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList listOperation;
    private javax.swing.JPanel panelChart;
    private javax.swing.JPanel panelNort;
    private javax.swing.JPanel panelSetting;
    // End of variables declaration//GEN-END:variables

    private JFreeChart createChart(int index){
        switch(index){
            case 0:{
                return dataset.generarGenero();
            }
            case 1:{
                return dataset.generarTipo();
            }
            case 2:{
                return dataset.generarEstadisticas()[2];
            }
            case 3:{
                return dataset.generarEstadisticas()[3];
            }
            case 4:{
                return dataset.generarEstadisticas()[4];
            }
            case 5:{
                return dataset.generarEstadisticas()[1];
            }
            case 6:{
                return dataset.generarEstadisticas()[0];
            }
            case 7:{
                return dataset.generarEstadisticas()[5];
            }
            case 8:{
                return dataset.generarEstadisticas()[6];
            }
            case 9:{
                return dataset.generarEstadisticas()[7];
            }
            case 10:{
                return dataset.generarEstadisticas()[9];
            }
            case 11:{
                return dataset.generarEstadisticas()[8];
            }
            case 12:{
                return dataset.promedios();
            }
            case 13:{
                return dataset.generarEstadisticas()[10];
            }
            case 14:{
                return dataset.generarEstadisticas()[11];
            }
            case 15:{
                return dataset.generarEstadisticas()[12];
            }
            case 16:{
                return dataset.generarEstadisticas()[13];
            }
            case 17:{
                return dataset.generarEstadisticas()[14];
            }
            case 18:{
                return dataset.generarEstadisticas()[15];
            }
            default:
                throw new RuntimeException("Selecion invalida");
        }
    }    
}
